(window.webpackJsonp=window.webpackJsonp||[]).push([[200],{813:function(e,t,o){"use strict";o.r(t);var n=o(1),i=Object(n.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"state-transitions"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#state-transitions"}},[e._v("#")]),e._v(" State Transitions")]),e._v(" "),o("p",[e._v("The "),o("code",[e._v("x/incentive")]),e._v(" module allows for two types of registration state transitions:  "),o("code",[e._v("RegisterIncentiveProposal")]),e._v(" and "),o("code",[e._v("CancelIncentiveProposal")]),e._v(". The logic for "),o("em",[e._v("gas metering")]),e._v(" and "),o("em",[e._v("distributing rewards")]),e._v(", is handled through "),o("RouterLink",{attrs:{to:"/modules/incentives/05_hooks.html"}},[e._v("Hooks")]),e._v(".")],1),e._v(" "),o("h2",{attrs:{id:"incentive-registration"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#incentive-registration"}},[e._v("#")]),e._v(" Incentive Registration")]),e._v(" "),o("p",[e._v("A user registers an incentive defining the contract, allocations, and number of epochs. Once the proposal passes (i.e is approved by governance), the incentive module creates the incentive and distributes rewards.")]),e._v(" "),o("ol",[o("li",[e._v("User submits a "),o("code",[e._v("RegisterIncentiveProposal")]),e._v(".")]),e._v(" "),o("li",[e._v("Validators of the Evmos Hub vote on the proposal using "),o("code",[e._v("MsgVote")]),e._v(" and proposal passes.")]),e._v(" "),o("li",[e._v("Create incentive for the contract with a "),o("code",[e._v("TotalGas = 0")]),e._v(" and set its "),o("code",[e._v("startTime")]),e._v(" to "),o("code",[e._v("ctx.Blocktime")]),e._v(" if the following conditions are met:\n"),o("ol",[o("li",[e._v("Incentives param is globally enabled")]),e._v(" "),o("li",[e._v("Incentive is not yet registered")]),e._v(" "),o("li",[e._v("Balance in the inflation pool is > 0 for each allocation denom except for the mint denomination. We know that the amount of the minting denom (eg: EVMOS) will be added to every block but for other denoms (IBC vouchers, ERC20 tokens using the "),o("code",[e._v("x/erc20")]),e._v(" module) the module account needs to have a positive amount to distribute the incentives")]),e._v(" "),o("li",[e._v("The sum of all registered allocations for each denom (current + proposed) is < 100%")])])])])])}),[],!1,null,null,null);t.default=i.exports}}]);